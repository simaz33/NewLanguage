digraph finite_state_machine {
        size="20"
        node [shape = doublecircle]; "INT\nFINAL" DEC INC "ASSIGN_OP\n FINAL" EQ_OP "MULT_LINE \nCOMM\n END" "ADD_OP\nFINAL" "SUB_OP\nFINAL" MUL_OP for_kw float_kw if_kw int_kw input_kw COMP_LE COMP_GE IDENT_END STRING_END "COMP_L\n FINAL" "COMP_G\n FINAL" "DIV_OP\n FINAL" EOF;
	node [shape = circle];
        START                       -> i                           [label = "i"]
        START                       -> ASSIGN_OP                   [label = "="]
        START                       -> COMP_L                      [label = "<"]
        START                       -> COMP_G                      [label = ">"]
        START                       -> ADD_OP                      [label = "+"]
        START                       -> SUB_OP                      [label = "-"]
        START                       -> MUL_OP                      [label = "*"]
        START                       -> DIV_OP                      [label = "/"]
        START                       -> IDENT                       [label = "a,d,g,h,j,\nk,l,m,n,p,\nq,u,x,y,z\n'_',\n0..9"]
        START                       -> STRING                      [label = "\""]
        START                       -> INT                         [label = "1..9"]
        START                       -> ZERO                        [label = "0"]
        ZERO                        -> INT_BIN                     [label = "b"]
        ZERO                        -> INT_HEX                     [label = "x"]
        ZERO                        -> INT                         [label = "0..9"]
        INT_BIN                     -> INT_BIN                     [label = "1, 0"]
        INT_BIN                     -> "INT\nFINAL"                [label = "any\nother\nsymbol"]
        INT_HEX                     -> INT_HEX                     [label = "0..9,\na..f"]
        INT_HEX                     -> "INT\nFINAL"                [label = "any\nother\nsymbol"]
        INT                         -> INT                         [label = "0..9"]
        INT                         -> "INT\nFINAL"                [label = "any\nother\nsymbol"]
        START                       -> f                           [label = "f"]
        ADD_OP                      -> "ADD_OP\nFINAL"              [label = "any\n other\n symbol"]
        ADD_OP                      -> INC                         [label = "+"]
        SUB_OP                      -> "SUB_OP\nFINAL"              [label = "any\nother\nsymbol"]
        SUB_OP                      -> DEC                         [label = "-"]
        ASSIGN_OP                   -> "ASSIGN_OP\n FINAL"         [label = "any\nother\nsymbol"]
        ASSIGN_OP                   -> EQ_OP                       [label = "="]
        COMP_L                      -> COMP_LE                     [label = "="]
        COMP_L                      -> "COMP_L\n FINAL"            [label = "any\nother\nsymbol"]
        COMP_G                      -> COMP_GE                     [label = "="]
        COMP_G                      -> "COMP_G\n FINAL"            [label = "any\nother\nsymbol"]
        f                           -> fo                          [label = "o"]
        f                           -> IDENT                       [label = "a..k,\nm..n,\np..z,\n'_',\n0..9"]
        fo                          -> for                         [label = "r"]
        for                         -> for_kw                      [label = "any\n other\n symbol"]
        for                         -> IDENT                       [label = "a..z\nA..Z\n0..9\n'_'"]
        fo                          -> IDENT                       [label = "a..q,\ns..z,\n'_',\n0..9"]
        f                           -> fl                          [label = "l"]
        fl                          -> flo                         [label = "o"]
        fl                          -> IDENT                       [label = "a..n,\np..z,\n'_',\n0..9"]
        flo                         -> floa                        [label = "a"]
        flo                         -> IDENT                       [label = "b..z,\n'_',\n0..9"]
        floa                        -> float                       [label = "t"]
        float                       -> float_kw                    [label = "any\n other\n symbol"]
        float                       -> IDENT                       [label = "a..z\nA..Z\n0..9\n'_'"]
        floa                        -> IDENT                       [label = "a..s,\nu..z,\n'_',\n0..9"]
        i                           -> IDENT                       [label = "a..e,\ng..m,\no..z,\n'_',\n0..9"]
        i                           -> if                          [label = "f"]
        if                          -> if_kw                       [label = "any\nother\nsymbol"]
        if                          -> IDENT                       [label = "a..z\nA..Z\n0..9\n'_'"]
        i                           -> in                          [label = "n"]
        in                          -> int                         [label = "t"]
        int                         -> int_kw                      [label = "any\nother\nsymbol"]
        int                         -> IDENT                       [label = "a..z\nA..Z\n0..9\n'_'"]
        in                          -> inp                         [label = "p"]
        in                          -> IDENT                       [label = "a..o,\nr..s,\nu..z,\n'_',\n0..9"]
        inp                         -> inpu                        [label = "u"]
        inp                         -> IDENT                       [label = "a..t,\nv..z,\n'_',\n0..9"]
        inpu                        -> input                       [label = "t"]
        input                       -> input_kw                    [label = "any\nother\nsymbol"]
        input                       -> IDENT                       [label = "a..z\nA..Z\n0..9\n'_'"]
        inpu                        -> IDENT                       [label = "a..s,\nu..z,\n'_',\n0..9"]
        IDENT                       -> IDENT                       [label = "a..z,\n'_',\n0..9"]
        IDENT                       -> IDENT_END                   [label = "any\nother\nsymbol"]
        DIV_OP                      -> "DIV_OP\n FINAL"            [label = "any\n other\n symbol"]
        DIV_OP                      -> "MULT_LINE \nCOMM\n START"  [label = "#"]
        "MULT_LINE \nCOMM\n START"  -> "MULT_LINE \nCOMM\n START"  [label = "any\nother\nsymbol"]
        "MULT_LINE \nCOMM\n START"  -> "MULT_LINE \nCOMM\n ENDING" [label = "#"]
        "MULT_LINE \nCOMM\n ENDING" -> "MULT_LINE \nCOMM\n END"    [label = "/"]
        "MULT_LINE \nCOMM\n ENDING" -> "MULT_LINE \nCOMM\n ENDING" []
        "MULT_LINE \nCOMM\n ENDING" -> "MULT_LINE \nCOMM\n START"  [label = "any\n other\n symbol"]
        STRING                      -> STRING                      [label = "any\nother\nsymbol"]
        STRING                      -> STRING_END                  [label = "\""]
        STRING                      -> STRING_ESC                  [label = "\\"]
        STRING_ESC                  -> STRING                      [label = "n,\nt,\nr"]
        START                       -> EOF                         [label = "eof"]
}